@import '../resources';


.absolute-fill { @extend %absoluteFill; }
.admin-table {
  font-size: $fontSizeSmall;
}

%avatar-container {
  border-radius: 50%;
  overflow: hidden;
  border: 2px solid $cWhite3;
}
.avatar-container-50 {
  @extend %avatar-container;
  height: 50px;
  width: 50px;
  border-width: 1px;
}
.avatar-container-80 {
  @extend %avatar-container;
  height: 80px;
  width: 80px;
}

.background-none { background: none !important; }

.border-none { border: none; }
.border-a { border: 1px solid $cBorderA; };
.border-top-a,
.border-top { border-top: 1px solid $cBorderA; };
.border-right-a,
.border-right { border-right: 1px solid $cBorderA; };
.border-bottom-a,
.border-bottom { border-bottom: 1px solid $cBorderA; };
.border-left-a,
.border-left { border-left: 1px solid $cBorderA; };

.border-b { border: 1px solid $cBorderB; };
.border-top-b { border-top: 1px solid $cBorderB; };
.border-right-b { border-right: 1px solid $cBorderB; };
.border-bottom-b { border-bottom: 1px solid $cBorderB; };
.border-left-b { border-left: 1px solid $cBorderB; };

.border-b-opaque { border: 1px solid $cBorderBOpaque; };
.border-top-b-opaque { border-top: 1px solid $cBorderBOpaque; };
.border-right-b-opaque { border-right: 1px solid $cBorderBOpaque; };
.border-bottom-b-opaque { border-bottom: 1px solid $cBorderBOpaque; };
.border-left-b-opaque { border-left: 1px solid $cBorderBOpaque; };

.border-c { border: 1px solid $cBorderC; };

.border-red { border: 1px solid $cRedBase; };
.border-red-2 { border: 2px solid $cRedBase; border-radius: 4px; };

.border-radius-20 { border-radius: 20px !important; }

.bullet-tertiary {
  display: inline-block;
  font-size: 8px;
  color: $cBlack7;
  padding: 0 3px 5px 3px;
  vertical-align: bottom;
}

.center-h {
  display: inline-block;
  margin-left: 50%;
  transform: translateX(-50%);
}
.clearfix { @include clearfix; }

.display-none { display: none !important; }
.display-block { display: block !important; }
.display-flex { display: flex !important; }
.display-inline-block { display: inline-block !important; }
.display-inline { display: inline !important; }
.display-table { display: table !important; }

.flex-grow-1 { flex-grow: 1; }
.flex-shrink-1 { flex-shrink: 1; }
// .flex-ellipsis-all {
//   &, & > * {
//     white-space: nowrap;
//     overflow: hidden;
//     text-overflow: ellipsis;
//   }
// }

@include media(sm) {
  .display-none-sm { display: none; }
  .display-block-only-sm { display: block;}
}
@include media(md) {
  .display-none-md-lg { display: none; }
  .display-block-only-sm { display: none; }
}
@include media(lg) {
  .display-none-md-lg { display: none; }
  .display-block-only-sm { display: none; }
}

.ellipsis-core { @extend %ellipsis-core; }
.ellipsis-100pct { @include ellipsis(100%); }
.ellipsis-95pct { @include ellipsis(95%); }
.ellipsis-90pct { @include ellipsis(90%); }
.ellipsis-100px { @include ellipsis(100px); }
.ellipsis-200px { @include ellipsis(200px); }

.flex-r {
  display: flex;
  flex-direction: row;
}
.flex-c {
  display: flex;
  flex-direction: column;
}
.flex-1 {
  flex: 1;
}

.focus-outline-none:focus {
  outline: 0 !important;
}


.gradient-image-shroud-1 { @extend %gradient-image-shroud-1; }
.gradient-image-shroud-2 { @extend %gradient-image-shroud-2; }
.gradient-dashboard-widget-profile { @extend %gradient-dashboard-widget-profile; }
.gradient-top-cover { @extend %gradient-top-cover; }
.gradient-autocomplete-input-after { @extend %gradient-autocomplete-input-after; }
.gradient-autocomplete-input-after-header { @extend %gradient-autocomplete-input-after-header; }


.list-placeholder {
  // display: inline-block;
  font-size: $fontSizeBase;
  color: $cBlack5Opaque;
  line-height: $lineHeight150pct;
}

.opacity-1 { opacity: 1 !important; }
.opacity-0 { opacity: 0 !important; }
.overflow-x-auto { overflow-x: auto; }

.position-absolute { position: absolute; }
.position-relative { position: relative; }
.position-fixed {
  position: fixed;
  will-change: transform;
}

// note: see .clearfix
.float-left { float: left; }
.float-right { float: right; }

.hover-underline:hover { text-decoration: underline; }

.top-contaner {
  position: relative;
  z-index: 10;
}

.vertical-align-5pct { vertical-align: 5%; } // for fontawesome wrapper
.vertical-align-top { vertical-align: top; }
.vertical-align-middle { vertical-align: middle; }
.vertical-align-bottom { vertical-align: bottom; }

.white-space-pre-wrap { white-space: pre-wrap; }
.white-space-nowrap { white-space: nowrap; }

.word-break-break-word { word-break: break-word;}

// from https://github.com/bfred-it/object-fit-images
%object-fill {
  width: 100%;
  height: 100%;
}
%object-fit-cover {
  @extend %object-fill;
  object-fit: cover;
  font-family: 'object-fit: cover;';
}
.object-fit-cover {
  @extend %object-fit-cover;
}
.object-fit-cover-bottom {
  @extend %object-fit-cover;
  object-position: bottom;
  font-family: 'object-fit: cover; object-position: bottom';
}

%object-fit-contain {
  @extend %object-fill;
  object-fit: contain;
  font-family: 'object-fit: contain;';
}
.object-fit-contain {
  @extend %object-fit-contain;
}

%object-fit-scale-down {
  @extend %object-fill;
  object-fit: scale-down;
  font-family: 'object-fit: scale-down;';
}
.object-fit-scale-down {
  @extend %object-fit-scale-down;
}

.object-position-bottom {
  object-position: 50% 100%;
}


// Generators - inspired by John Polacek:
// https://github.com/johnpolacek/responsive-utilities-generator
// note: $values are in px;
@mixin spacingUtilitiesGenerator(
  $values: (-5, -1, 0, 1, 3, 5, 6, 8, 10, 15, 18, 20, 25, 30, 35, 40, 50, 60, 80),
  $properties: (padding, margin),
  $modifiers: (top, right, bottom, left),
  $screensizes: (sm, md, lg)
) {

  @for $i from 1 through length($properties) {
    $property: nth($properties, $i);

    // NOT RESPONSIVE
    @for $j from 1 through length($values) {
      $value: nth($values, $j);

      // no modifier
      .#{$property}-#{$value} {
        #{$property}: #{$value}px !important;
      }

      // left-right and top-bottom
      .#{$property}-h-#{$value} {
        #{$property}-left: #{$value}px !important;
        #{$property}-right: #{$value}px !important;
      }
      .#{$property}-v-#{$value} {
        #{$property}-top: #{$value}px !important;
        #{$property}-bottom: #{$value}px !important;
      }

      // modifiers
      @for $k from 1 through length($modifiers) {
        $modifier: nth($modifiers, $k);

        .#{$property}-#{$modifier}-#{$value} {
          #{$property}-#{$modifier}: #{$value}px !important;
        }
      }
    }

    // RESPONSIVE
    @for $s from 1 through length($screensizes) {
      $screen: nth($screensizes, $s);

      @for $j from 1 through length($values) {
        $value: nth($values, $j);

        @include media($screen) {
          // no modifier
          .#{$property}-#{$value}-#{$screen} {
            #{$property}: #{$value}px !important;
          }

          // left-right and top-bottom
          .#{$property}-h-#{$value}-#{$screen} {
            #{$property}-left: #{$value}px !important;
            #{$property}-right: #{$value}px !important;
          }
          .#{$property}-v-#{$value}-#{$screen} {
            #{$property}-top: #{$value}px !important;
            #{$property}-bottom: #{$value}px !important;
          }

          // modifiers
          @for $k from 1 through length($modifiers) {
            $modifier: nth($modifiers, $k);

            .#{$property}-#{$modifier}-#{$value}-#{$screen} {
              #{$property}-#{$modifier}: #{$value}px !important;
            }
          }
        }
      }
    }
  }
}
@include spacingUtilitiesGenerator;

// media dependent spacing
@include media(sm) {
  .padding-0-sm { padding: 0 }
  .padding-h-18-sm { padding-left: 18px; padding-right: 18px; }
}
@include media(md) {
  .padding-0-md,
  .padding-0-md-lg { padding: 0 }
}
@include media(lg) {
  .padding-0-lg,
  .padding-0-md-lg { padding: 0 }
}

// unique dimensions
.height-100pct { height: 100%; }
.height-0 { height: 0px; }
.max-height-100pct { max-height: 100%; }

.scroll-trigger {
  height: 1px;
  margin-bottom: -1px;
}

.width-100pct { width: 100%; }
.width-90pct { width: 90%; }
.max-width-none { max-width: none; }
.max-width-100pct { max-width: 100% !important; }
// .max-width-320 { max-width: 320px; }
.max-width-570 { max-width: 570px; }
.max-width-1550 { max-width: 1550px; }

.margin-top-3 { margin-top: 3px; } // lightbox icons
.margin-h-auto { margin-left: auto; margin-right: auto; }

// dimensions generator
@mixin dimensionUtilitiesGenerator(
  $properties: (height, width),
  $values: (5, 10, 16, 20, 30, 50, 60, 70, 80, 90,
            100, 150, 160, 200, 250, 300, 302, 350,
            400, 450, 500, 550, 600, 650, 700, 750,
            800, 850, 900, 950, 1000, 1100, 1200) // px
) {

  @for $i from 1 through length($properties) {
    $property: nth($properties, $i);

    @for $j from 1 through length($values) {
      $value: nth($values, $j);

      // i.e. width-200
      .#{$property}-#{$value} {
        #{$property}: #{$value}px;
      }

      // i.e. min-height-20
      .min-#{$property}-#{$value} {
        min-#{$property}: #{$value}px;
      }

      // i.e. max-width-200
      .max-#{$property}-#{$value} {
        max-#{$property}: #{$value}px;
      }
    }
  }
}
@include dimensionUtilitiesGenerator;
